[project]
name = "starlings"
dynamic = ["version"]
description = "A Python package for comparing entity resolutions from different processes"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "numpy>=2.2.6",
]
license = {file = "LICENSE"}
authors = [
    {name = "Will Langdale"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Rust",
]
keywords = ["entity-resolution", "data-processing", "rust"]

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

# Presence enables setuptools-scm
[tool.setuptools_scm]


[tool.maturin]
python-source = "src/python"
module-name = "starlings.starlings"
manifest-path = "src/rust/starlings-py/Cargo.toml"

[dependency-groups]
dev = [
    "maturin>=1.8.6",
    "mkdocs>=1.6.1",
    "mkdocs-autorefs>=1.4.3",
    "mkdocs-material>=9.6.18",
    "mkdocstrings[python]>=0.30.0",
    "mypy>=1.16.0",
    "pytest>=8.4.0",
    "ruff>=0.11.13",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "starlings.starlings"
ignore_missing_imports = true

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.uv]
# Prevent uv sync from building the package - use just build instead
package = false

[tool.ruff]
exclude = [
    "*.ipynb"
]
line-length = 88
indent-width = 4
target-version = "py310"
src = ["src"]
preview = true

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
    "B",
    "D",
    "UP",
    "TID",
    "BLE",
    "PLC",
    "SIM"
]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/{test,docs}/*" = ["D"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
